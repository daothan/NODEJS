service: book-api

provider:
  name: aws
  runtime: nodejs6.10
  stage: dev
  region: eu-west-2
  profile: default


functions:
  create:
    handler: handler.create
    events:
      - http:
          path: books
          method: post
          cors: true

  list:
    handler: handler.list
    events:
      - http: 
          path: books
          method: get
          cors: true

  listById:
    handler: handler.listById
    events:
      - http:
          path: books/{id}
          method: get
          cors: true

  update:
    handler: handler.update
    events:
      - http:
          path: books/{id}
          method: put
          cors: true

  delete:
    handler: handler.delete
    events:
      - http:
          path: books/{id}
          method: delete
          cors: true


resources:
  Resources:
    BooksDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      Properties:
        TableName: 'Books'
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
    DynamoDBIamPolicy:
      Type: 'AWS::IAM::Policy'
      Properties:
        PolicyName: lambda-dynamodb
        PolicyDocument:
          Statement:
            - Effect: Allow
              Action:
                - dynamodb:Scan
                - dynamodb:GetItem
                - dynamodb:PutItem
                - dynamodb:UpdateItem
                - dynamodb:DeleteItem
              Resource: arn:aws:dynamodb:*:*:table/Books
        Roles:
          - Ref: IamRoleLambdaExecution