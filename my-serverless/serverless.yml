
service: my-serverless

provider:
  name: aws
  runtime: nodejs6.10
  profile: dev
  region: us-east-2
  environment:
    CANDIDATE_TABLE: "${self:service}-${opt:stage, self:provider.stage}"
    CANDIDATE_EMAIL_TABLE: "candidate-email-${opt:stage, self:provider.stage}"
  iamRoleStatements:
  - Effect: Allow
    Action:
      - dynamodb:Query
      - dynamodb:Scan
      - dynamodb:GetItem
      - dynamodb:PutItem
    Resource: "*"

functions:
  candidate-list:
    handler: function/handler.index
    events:
      - http: GET ${self:service}/api/v1/candidate
  candidate-store:
    handler: function/handler.store
    events:
      - http: POST ${self:service}/api/v1/candidate
  candidate-show:
    handler: function/handler.show
    events:
      - http: GET ${self:service}/api/v1/candidate/{id}
  candidate-delete:
    handler: function/handler.delete
    events:
      - http: DELETE ${self:service}/api/v1/candidate/{id}

resources:
  Resources:
    CandidatesDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          -
            AttributeName: "id"
            AttributeType: "S"   
        KeySchema:
          -
            AttributeName: "id"
            KeyType: "HASH"
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: "NEW_AND_OLD_IMAGES"
        TableName: ${self:provider.environment.CANDIDATE_TABLE}
